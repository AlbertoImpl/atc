// This file was generated by counterfeiter
package enginefakes

import (
	"sync"

	"github.com/concourse/atc/engine"
)

type FakeBuildDelegateFactory struct {
	DelegateStub        func(buildID int, pipelineID int) engine.BuildDelegate
	delegateMutex       sync.RWMutex
	delegateArgsForCall []struct {
		buildID    int
		pipelineID int
	}
	delegateReturns struct {
		result1 engine.BuildDelegate
	}
	invocations      map[string][][]interface{}
	invocationsMutex sync.RWMutex
}

func (fake *FakeBuildDelegateFactory) Delegate(buildID int, pipelineID int) engine.BuildDelegate {
	fake.delegateMutex.Lock()
	fake.delegateArgsForCall = append(fake.delegateArgsForCall, struct {
		buildID    int
		pipelineID int
	}{buildID, pipelineID})
	fake.recordInvocation("Delegate", []interface{}{buildID, pipelineID})
	fake.delegateMutex.Unlock()
	if fake.DelegateStub != nil {
		return fake.DelegateStub(buildID, pipelineID)
	} else {
		return fake.delegateReturns.result1
	}
}

func (fake *FakeBuildDelegateFactory) DelegateCallCount() int {
	fake.delegateMutex.RLock()
	defer fake.delegateMutex.RUnlock()
	return len(fake.delegateArgsForCall)
}

func (fake *FakeBuildDelegateFactory) DelegateArgsForCall(i int) (int, int) {
	fake.delegateMutex.RLock()
	defer fake.delegateMutex.RUnlock()
	return fake.delegateArgsForCall[i].buildID, fake.delegateArgsForCall[i].pipelineID
}

func (fake *FakeBuildDelegateFactory) DelegateReturns(result1 engine.BuildDelegate) {
	fake.DelegateStub = nil
	fake.delegateReturns = struct {
		result1 engine.BuildDelegate
	}{result1}
}

func (fake *FakeBuildDelegateFactory) Invocations() map[string][][]interface{} {
	fake.invocationsMutex.RLock()
	defer fake.invocationsMutex.RUnlock()
	fake.delegateMutex.RLock()
	defer fake.delegateMutex.RUnlock()
	return fake.invocations
}

func (fake *FakeBuildDelegateFactory) recordInvocation(key string, args []interface{}) {
	fake.invocationsMutex.Lock()
	defer fake.invocationsMutex.Unlock()
	if fake.invocations == nil {
		fake.invocations = map[string][][]interface{}{}
	}
	if fake.invocations[key] == nil {
		fake.invocations[key] = [][]interface{}{}
	}
	fake.invocations[key] = append(fake.invocations[key], args)
}

var _ engine.BuildDelegateFactory = new(FakeBuildDelegateFactory)
