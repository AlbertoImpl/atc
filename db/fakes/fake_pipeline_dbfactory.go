// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/concourse/atc/db"
)

type FakePipelineDBFactory struct {
	BuildStub        func(pipeline db.SavedPipeline) db.PipelineDB
	buildMutex       sync.RWMutex
	buildArgsForCall []struct {
		pipeline db.SavedPipeline
	}
	buildReturns struct {
		result1 db.PipelineDB
	}
	BuildWithPipelineStub        func(savedPipeline db.SavedPipeline) db.PipelineDB
	buildWithPipelineMutex       sync.RWMutex
	buildWithPipelineArgsForCall []struct {
		savedPipeline db.SavedPipeline
	}
	buildWithPipelineReturns struct {
		result1 db.PipelineDB
	}
}

func (fake *FakePipelineDBFactory) Build(pipeline db.SavedPipeline) db.PipelineDB {
	fake.buildMutex.Lock()
	fake.buildArgsForCall = append(fake.buildArgsForCall, struct {
		pipeline db.SavedPipeline
	}{pipeline})
	fake.buildMutex.Unlock()
	if fake.BuildStub != nil {
		return fake.BuildStub(pipeline)
	} else {
		return fake.buildReturns.result1
	}
}

func (fake *FakePipelineDBFactory) BuildCallCount() int {
	fake.buildMutex.RLock()
	defer fake.buildMutex.RUnlock()
	return len(fake.buildArgsForCall)
}

func (fake *FakePipelineDBFactory) BuildArgsForCall(i int) db.SavedPipeline {
	fake.buildMutex.RLock()
	defer fake.buildMutex.RUnlock()
	return fake.buildArgsForCall[i].pipeline
}

func (fake *FakePipelineDBFactory) BuildReturns(result1 db.PipelineDB) {
	fake.BuildStub = nil
	fake.buildReturns = struct {
		result1 db.PipelineDB
	}{result1}
}

func (fake *FakePipelineDBFactory) BuildWithPipeline(savedPipeline db.SavedPipeline) db.PipelineDB {
	fake.buildWithPipelineMutex.Lock()
	fake.buildWithPipelineArgsForCall = append(fake.buildWithPipelineArgsForCall, struct {
		savedPipeline db.SavedPipeline
	}{savedPipeline})
	fake.buildWithPipelineMutex.Unlock()
	if fake.BuildWithPipelineStub != nil {
		return fake.BuildWithPipelineStub(savedPipeline)
	} else {
		return fake.buildWithPipelineReturns.result1
	}
}

func (fake *FakePipelineDBFactory) BuildWithPipelineCallCount() int {
	fake.buildWithPipelineMutex.RLock()
	defer fake.buildWithPipelineMutex.RUnlock()
	return len(fake.buildWithPipelineArgsForCall)
}

func (fake *FakePipelineDBFactory) BuildWithPipelineArgsForCall(i int) db.SavedPipeline {
	fake.buildWithPipelineMutex.RLock()
	defer fake.buildWithPipelineMutex.RUnlock()
	return fake.buildWithPipelineArgsForCall[i].savedPipeline
}

func (fake *FakePipelineDBFactory) BuildWithPipelineReturns(result1 db.PipelineDB) {
	fake.BuildWithPipelineStub = nil
	fake.buildWithPipelineReturns = struct {
		result1 db.PipelineDB
	}{result1}
}

var _ db.PipelineDBFactory = new(FakePipelineDBFactory)
